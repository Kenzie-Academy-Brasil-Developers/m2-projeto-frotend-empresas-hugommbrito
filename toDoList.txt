✅⬜
✅   1 - Baixar Repositórios
✅       I - Da Aplicação e fundir o scaffold
✅       II - Da API e instalar no insomnia
⬜   2 - Ajustar o scaffold 
⬜       I - Pastas e Arquivos
⬜       II - Cores
⬜       III - Botões
⬜       IV - Fonts
⬜   3 - Criar estrutura HTML
⬜       I - Página Inicial
⬜       II - Página de Autenticação
⬜       III - Página de Cadastro
⬜       IV - Página Painel de Controle
⬜           a - Painel de Controle de ADMIN
⬜           b - Painel de controle de Usuário
⬜   3 - Estilização CSS
⬜       I - Página Inicial
⬜           a - Mobile
⬜           b - Desktop
⬜       II - Página de Cadastro
⬜           a - Mobile
⬜           b - Desktop
⬜       III - Página de Autenticação
⬜           a - Mobile
⬜           b - Desktop
⬜       IV - Página Painel de Controle
⬜           a - Painel de Controle de ADMIN
⬜           b - Painel de controle de Usuário
⬜   4 - Kógica da Home Page
⬜       I - Redirecionamento para Cadastro
⬜       II - Redirecionamento para Login
⬜       III - Renderizar uma lista com todas as empresas cadastradas (Request API)
⬜       IV - Importar lista de setores para menu seletor (Request API)
⬜       V - Filtrar empresas por setor selecionado
⬜       VI - Sem restrições, qualquer uim pode entrar nessa Página
⬜   5 - Lógica do Cadastro
⬜       I - Criar formulário com botão de cadastro (Request API)
⬜       II - Ao cadastrar, retornar para a pg Login
⬜       III - Botão de Retornar, para a pg de Login
⬜       IV - Em caso de erro na requisição, retornar toasty de erro
⬜   6 - Lógica Pg Autenticação (Login)
⬜       I - Fazer requisição de Login (Request API)
⬜           a - Guardar Token e info de Admin? no LocalStorage
⬜           b - Redireciona para o DashBoard correto (Usuário ou Admin)
⬜       II - Botão para redirecionar p. Cadastro
⬜       III - Em caso de erro, mostrar toasty com o retorno da API
⬜       IV - Os dashboards devem encaminhar para o login caso não esteja logado
⬜   7 - Lógica Painel de Controle ADMINISTRADOR / Seção Departamentos
⬜       I - Formulário para cadastrar depto em uma empresa específica
⬜           a - Toasty para indicar sucesso/erro
⬜       II - Criar filtro para Listar todos os Departamentos de uma empresa específica (Request API)
⬜       III - Botão de Visualizar Departamento
⬜           a - Exibir dados: Funcionários, descrição, nome do dpto, empresa
⬜               -- Funcionários devem conter Nome, Nível profissional e Tipo de trabalho
⬜               -- Estilizar o Scroll
⬜           b - Lógica para ADD funcionário ao Dpto (Request API)
⬜               -- Renderizar apenas os que não foram contratados por nenhuma empresa/dpto
⬜           c - Lógica para Remover funcionário ao Dpto (Request API)
⬜       IV - Lógica para EDITAR Dpto (Request API)
⬜           a - Abrir modal já preenchido com dados originais do dpto
⬜       V - Lógica para DELETAR Dpto (Request API)
⬜           a - Pop-up de confirmação
⬜       VI - Ao clicar no botão de logout, remove as informações do usuário do localStorage e redireciona para a HomePage
⬜   8 - Lógica Painel de Controle ADMINISTRADOR / Seção Usuários
⬜       I - Lógica para alterar modalidade de trabalho (Request API)
⬜           a - Home Office - Presencial - Híbrido
⬜       II - Modificar Cargo (Request API)
⬜           a - Estágio - Júnior - Pleno - Sênior
⬜       III - Mostrar TODOS os usuários cadastrados na API (Request API)
⬜           a - Mostrar dados dos usuários: username, email, cargo e modalidade de trabalho
⬜           b - Caso a modalidade ou o cargo sejam nulos, não demostra o dado na tela.
⬜   9 - Lógica painel de controle de USUÁRIO COMUM
⬜       I - Mostrar APENAS Colegas de Empresa/Departamento (Request API)
⬜       II - Alterar suas próprias informações (password, email e username)
⬜       III - Mostrar mensagem quando não houver contratação
⬜
⬜



=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~   C H E C A G E N S   =~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~

⬜   Redirecionamento entre as páginas
        --É possível se redirecionar para as páginas com botões no header, como demonstrado no figma.

⬜   HomePage - Renderizar Empresas
        Com base na API renderiza os cards na home page com as seguintes informações de cada empresa cadastrada: nome, horário de abertura e setor

⬜   HomePage - Filtro por select
        1. Renderiza um select com todos os setores já cadastrados com base na API
        2. Ao Escolher um dos setores as empresas devem ser filtradas.

⬜   Página de Cadastro - Cadastrar usuário
        1. Sendo possível cadastrar um usuário via formulário na API
        2. Ao cadastrar redirecionar o usuário para a página de login

⬜   Página de Login - Autenticar Usuário
        1. É possível autenticar um usuário via formulário na API
        2. O token retornado é armazenado no localStorage
        3. Redireciona para o dashboard respectivo ao seu tipo de usuário

⬜   Dashboard Admin - Renderizar departamentos
        1. Renderiza todos os departamentos cadastrados na API
        2. Cada card contém um botão para visualizar, editar e deletar.

⬜   Dashboard Admin - Filtrar Departamentos por empresa
        1. Existe um select com todas as empresas vindo da API
        2. Filtra os departamentos baseados nesse select ao selecionar a empresa

⬜   Dashboard Admin - Criar Departamento
        1. Ao clicar em um botão criar, abre um modal com um formulário capaz de cadastrar um departamento na aplicação
        2. Formulário com os dados: nome do departamento, descrição e um select com as empresas já cadastradas vindas da API

⬜   Dashboard Admin - Editar Departamento
        1. Ao clicar em um botão de editar, abre um modal com um formulário já preenchido com a descrição anterior
        2. Atualiza o dado no banco caso o usuário altere algo na descrição

⬜   Dashboard Admin - Deletar Departamento
        1. Ao clicar em um botão de deletar, abre um modal com a mensagem de confirmação como mostrado no figma.
        2. Ao clicar no botão de confirmar, deleta o dado via API

⬜   Dashboard Admin - Visualizar Departamento
        1. Ao clicar em um botão de visualizar, abre um modal com as seguintes informações: nome, descrição e a que empresa pertence.
        2. Renderiza um select com os usuários que não foram contratados por nenhuma empresa.

⬜   Dashboard Admin - Contratar Funcionário para um Departamento
        1. Dentro da visualização de departamento, é possível escolher um dos usuários sem departamento do select e contratar ele para o departamento respectivo pelo botão contratar

⬜   Dashboard Admin - Renderizar funcionário de departamento
        1. No modal de visualizar departamento renderiza uma lista de usuários que trabalham nesse departamento, cada card deverá conter um botão para demitir usuário do departamento.

⬜   Dashboard Admin - Demitir Funcionário para um Departamento
    1. Ao clicar no botão demitir dentro da visualização de departamento, remove o usuário do departamento (existe um endpoint especifico para demitir)

⬜   Dashboard Admin - Renderizar usuários
        1. Renderiza todos os usuários cadastrados atualmente na API
        2. Cada card possui um botão para editar e deletar.
        3. Não renderiza o usuário ADMIN

⬜   Dashboard Admin - Editar usuários
        1. Ao clicar em editar, abre um modal com um formulário possuindo os seguintes campos: modalidade de trabalho (home office, presencial, híbrido) e o cargo (estágio, júnior, pleno, sênior)
        2. Ao clicar em atualizar modifica suas respectivas informações via API

⬜   Dashboard Admin - Deletar usuário
        1. Ao clicar em um botão de deletar, abre um modal com a mensagem de confirmação como mostrado no figma.
        2. Ao clicar no botão de confirmar, deleta o dado via API

⬜   Dashboard User - Renderizar informações pessoais
        1. Renderiza os dados do usuário na tela: username, email, cargo e modalidade de trabalho
        2. Caso a modalidade ou o cargo sejam nulos, não demostra o dado na tela.
        3. Possui botão de editar

⬜   Dashboard User - Editar informações pessoais
        1. Ao clicar em editar, abre um modal com um formulário contendo os campos: username, email e password
        2. Ao clicar em atualizar enviar as informações do formulário via API e atualiza os dados do usuário atual

⬜   Dashboard User - Renderizar co-workers
        1. Renderiza as informações de trabalho do usuário no bloco azul: nome da empresa e nome do departamento
        2. Renderiza os usuários que trabalham com esse usuário logado (co-workers) em forma de cards com o nome e o cargo do colega.

⬜   Validação de usuário logado
        1. Usuário precisa estar logado para acessar os dashboards, caso contrário, redireciona para a HomePage.
        2. Usuário admin consegue acessar apenas o dashboard admin
        3. Usuário comum acessa apenas o dashboard usuário comum.
        4. Caso não siga as regras acima, redireciona para o dashboard correto.

⬜   Logout
        Ao clicar no botão de logout, remove as informações do usuário do localStorage e redireciona para a HomePage

⬜   Mobile First
        1. As páginas: HomePage, Login e Register tem sua versão mobile conforme o figma
        2. Deverá conter um menu dropdown/hambúrguer

⬜   Estilização
        Estilização de todos os elementos de acordo com o Figma

⬜   Respostas da aplicação
        1. Caso as requisições sejam bem sucedidas, demostrar um toastfy de acerto com uma mensagem respectiva
        2. Caso as requisições não sejam bem sucedidas, demostrar um toastfy de erro com uma mensagem respectiva

⬜
⬜
